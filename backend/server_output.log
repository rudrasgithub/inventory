nohup: ignoring input
[dotenv@17.2.1] injecting env (6) from .env -- tip: ⚙️  suppress all logs with { quiet: true }
[dotenv@17.2.1] injecting env (0) from .env -- tip: ⚙️  suppress all logs with { quiet: true }
✅ Connected to MongoDB successfully
Daily expired products check scheduled
Server running on port 5000
Auth middleware error: jwt malformed
Request Body: { email: 'test@example.com', password: 'testpass' }
Request Body: {
  email: 'rudra@gmail.com',
  password: '12345678',
  name: '',
  confirmPassword: ''
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
[getSummary] called for user: new ObjectId('68b5cf4ad67bf953cabe1e5b')
[getSummary] totalProducts for user: 100
[getSummary] ordered: 50 revenue: 775
[getSummary] returning: {
  categories: 3,
  totalProducts: 100,
  revenue: 775,
  notInStock: 2,
  lowStock: 0,
  ordered: 50
}
